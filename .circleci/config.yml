version: 2.1
jobs:
    checkout:
        docker:
            - image: circleci/openjdk:13-jdk-buster
        steps:
            - checkout
            - restore_cache:
                key: loghub-{{ checksum "pom.xml" }}
            - run: mkdir -p /home/circleci/.sonar/cache /home/circleci/.m2/repository
            - run:
                command: "mvn -B dependency:go-offline -Psonar,versions -s .circleci/settings.xml"
                environment:
                    JAVA_HOME: /usr/java/openjdk-13
            - persist_to_workspace:
                root: /
                paths:
                    - home/circleci/.m2/repository
                    - home/circleci/.sonar/cache
                    - home/circleci/project
    build:
        docker:
            - image: circleci/openjdk:8-jdk
            - image: circleci/openjdk:13-jdk-buster
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                    mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
            - run:
                command: mvn -B clean compile -DskipTests -s .circleci/settings.xml
                environment:
                    JAVA_HOME: /usr/java/openjdk-13
            - persist_to_workspace:
                root: /
                paths:
                    - home/circleci/.m2/repository
                    - home/circleci/project/target
    testsj8:
        docker:
            - image: circleci/openjdk:8-jdk
            - image: docker.elastic.co/elasticsearch/elasticsearch:6.6.0
              environment:
                  discovery.type: single-node
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                    mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
            - run:
                command: |
                    # If no symbolic name, it's a PR, will run sonar
                    if [ -n "$(git symbolic-ref HEAD 2>/dev/null )" ] ; then
                        SONAR="-Psonar"
                    else
                        SONAR=""
                    fi
                    echo "publishing jobs: $SONAR"
                    mvn -B test -Pskip $SONAR -Dsonar.login=$SONARCLOUD_LOGIN -s .circleci/settings.xml
                environment:
                    JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
            - store_test_results:
                path: target/surefire-reports
            #don't persist_to_workspace, can't be done in parallel with testsj11
    testsj11:
        docker:
            - image: circleci/openjdk:11-jdk
            - image: docker.elastic.co/elasticsearch/elasticsearch:6.6.0
              environment:
                  discovery.type: single-node
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv -n /tmp/ws/home/circleci/.sonar /home/circleci/
                    mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                    mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
            - run:
                command: |
                    mvn -B test -Pskip -s .circleci/settings.xml
                environment:
                    JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
            - store_test_results:
                path: target/surefire-reports
            - persist_to_workspace:
                root: /
                paths:
                    - home/circleci/.m2/repository
                    - home/circleci/.sonar/cache
    publish:
        docker:
            - image: circleci/openjdk:13-jdk-buster
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv -n /tmp/ws/home/circleci/.sonar /home/circleci/
                    mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                    mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
            - run:
                command: |
                    # If no symbolic name, it's a PR, will not publish results
                    if [ -n "$(git symbolic-ref HEAD 2>/dev/null )" ] ; then
                        PUBLISH="deploy"
                    else
                        PUBLISH="install"
                    fi
                    echo "publishing jobs: $PUBLISH"
                    mvn -B $PUBLISH site -Pskip -Dmaven.test.skip=true -s .circleci/settings.xml
                environment:
                    JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
                    MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.plugins.shade=ERROR"
            - persist_to_workspace:
                root: /
                paths:
                    - home/circleci/.m2/repository
                    - home/circleci/.sonar/cache
    savecache:
        docker:
            - image: circleci/openjdk:11-jdk
              environment:
                  discovery.type: single-node
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv /tmp/ws/home/circleci/project/pom.xml /home/circleci/project/
                    mv /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv /tmp/ws/home/circleci/.sonar /home/circleci/
            - save_cache:
                paths:
                    - /home/circleci/.m2/repository
                    - /home/circleci/.sonar/cache
                key: loghub-{{ checksum "pom.xml" }}
            
workflows:
  version: 2.1
  build_and_test:
    jobs:
      - checkout
      - build:
          requires:
              - checkout
      - testsj8:
          requires:
              - build
      - testsj11:
          requires:
              - build
      - publish:
          requires:
              - testsj8
#              - testsj11
      - savecache:
          requires:
              - publish
